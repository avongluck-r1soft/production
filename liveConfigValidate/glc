#!/usr/bin/env python

import json
import sys
import urllib2

class color_message:
    OK   = '\033[92m'
    FAIL = '\033[91m'

# TODO - get this dynamically.
csbms = [
"83a4ce52-6b2d-47c3-a6ff-35864e3d30ce","f8981d09-bb9a-4dad-8947-75ea5bd3a4dc","ff324bf5-0ca9-4be9-9753-fcdf06476b10",
"cf24ab33-32e2-47cb-9468-4b000f95ec97","f82b8ac5-70f2-4b1c-9225-79e0f1d0431b","7a9c63ad-90ff-44f2-bb70-36b79834e9bc",
"911f15b0-60ec-44b5-bfdd-f963c2ad4a88","65fb5970-7fbd-4537-ac67-2d7575509f6e","3670b2c0-8de3-44d5-ab87-9f26d4ed9708",
"f51bd7b2-f59d-4add-8113-d9fef334091d","308df16d-46c1-437b-8ede-28412900c61a","1b8c1419-e899-4061-9bd3-9168586a24c3",
"d3a7fd9f-00af-4a19-a4cb-643871d7cca9","e28e8e11-9bd0-4b52-a840-d4190a7a2694","14730793-756a-467e-bb1d-d317d0930093",
"14b58fcc-89b3-48d5-ab03-4308a6284cf7","55b68496-8f1a-44d0-beca-d1bc30f20147","095e7def-7b56-474a-b496-b158d5f2b04c",
"0372c590-22d1-4aeb-ac5a-ea6dfe385e39","d5d08793-f5e8-4433-ba9b-bfa7f1ae6f78","f1af3987-1573-47a3-bb90-6bd3dbadab55",
"499ee4ee-3e9f-4375-bbd8-dde3d8ea0e3f","9cf104d6-3eb8-43e7-99ce-aee7de598c2c","f75ec466-4219-412c-9983-1897e0c72b0a",
"c55087c6-d74d-4cb3-bcad-6840cf4fc0d3","95c9efb5-7b8c-4f99-956e-e712067a4736","a554f3b3-e0b6-4b06-88cb-51ad686aef61",
"697f07b1-dd98-457d-a8d9-ae9f83430c1a","cd49e1a4-c234-493c-a1ee-59e9335035fe","5498c81a-e792-4328-8339-4635ad274e1b",
"10a5fb4e-e1eb-4e2f-bd90-105e7c64a644","27309d3e-0b7a-4244-9c82-796bf2f0378d","05ab3885-ac7b-410d-a5e2-cf5eb40a19b7",
"1df498d2-dca9-4653-9411-b07a59414d60","ca06d1dc-361d-4bca-b68f-f557670ddb27","67cd94e7-fa30-46d4-a015-89a1b4d39248",
"b6a75033-f95b-49ed-a25f-22f6ea7a9fc8","be96c92e-3716-433c-90e7-520857473e18"
]

GOLD_GEN2 = json.loads("""[
{"Limits":{"maxVMs":20},"Config":{"DeltaCalculationFrequency":432000,"SOAPTimeout":3600,"advancedStorage":["/storage01/replication","/storage02/replication","/storage03/replication","/storage04/replication","/storage05/replication","/storage06/replication","/storage07/replication","/storage08/replication","/storage09/replication"],"maxSpools":40}}
]""")

GOLD_GEN3 = json.loads("""[
{"Limits":{"maxVMs":20},"Config":{"DeltaCalculationFrequency":432000,"SOAPTimeout":3600,"advancedStorage":["/storage01/replication","/storage02/replication","/storage03/replication","/storage04/replication","/storage05/replication","/storage06/replication"],"maxSpools":20}}
]""")


def getLiveConfig(csbm):
    url = "http://10.80.65.31:57988/r1rmGA/csbm/"+csbm+"/liveConfig"
    response = urllib2.urlopen(url)
    content = response.read()
    return content

""" 
Compare production and gold liveconfigs 
"""
def compareLiveConfigs(csbm):
    csbmLiveConfig = getLiveConfig(csbm)
    if csbmLiveConfig == GOLD_GEN2 or csbmLiveConfig == GOLD_GEN3: 
        print color_message.OK + "  OK: " + csbm + " -- GOOD live config on cloud SBM."
    else:
        print color_message.FAIL + "FAIL: " + csbm + " -- BAD live config on cloud SBM."
    


def main():
    for i in csbms:
        lcData = getLiveConfig(i)
        parsed = json.loads(lcData)
        print(i)
        print json.dumps(parsed, indent=4, sort_keys=True)
        compareLiveConfigs(i)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        sys.exit()


